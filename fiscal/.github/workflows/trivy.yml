name: Trivy Security Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  security-events: write

jobs:
  # Scan do sistema de arquivos para vulnerabilidades no código fonte
  trivy-fs:
    name: Trivy FS Scan (repo)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-fs.sarif
          ignore-unfixed: true
          severity: CRITICAL,HIGH,MEDIUM

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-fs.sarif
        if: always()

  # Scan de vulnerabilidades na imagem Docker construída
  trivy-image:
    name: Trivy Image Scan (Dockerfile/web_app)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image (local)
        working-directory: web_app
        run: |
          docker build -t fiscal-scan:latest .

      - name: Trivy image scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: fiscal-scan:latest
          format: sarif
          output: trivy-image.sarif
          ignore-unfixed: true
          severity: CRITICAL,HIGH,MEDIUM

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif
        if: always()
