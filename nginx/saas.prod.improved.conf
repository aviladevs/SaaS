# Ávila DevOps SaaS - Nginx Production Configuration (Melhorada)
# Configuração otimizada baseada no feedback do usuário

# Define usuário e processos de trabalho
user nginx;
worker_processes auto;
worker_rlimit_nofile 2048;

# Eventos de trabalho
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

# Configurações HTTP
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging otimizado para produção
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$http_x_forwarded_proto" "$upstream_addr" '
                    '$request_time $upstream_response_time $upstream_status';

    log_format health_check '$remote_addr - [$time_local] "$request" $status';

    # Acesso limitado para reduzir tamanho dos logs em produção alta
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Configurações básicas de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;

    # Buffers otimizados
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    client_max_body_size 50m;
    large_client_header_buffers 4 16k;
    output_buffers 2 64k;
    postpone_output 1460;

    # Gzip compression otimizado
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting ajustado (menos restritivo)
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=20r/m;
    limit_req_zone $binary_remote_addr zone=admin:10m rate=50r/s;

    # Map para identificar serviços e tenants
    map $http_host $service_name {
        default "unknown";
        "~^(.+)\.aviladevops\.com\.br$" $1;
        "aviladevops.com.br" "landing-page";
    }

    # Map para identificar tenants
    map $http_host $tenant_name {
        default "default";
        "~^(.+)\.aviladevops\.com\.br$" $1;
    }

    # Upstream servers - Preparado para escalabilidade
    upstream landing_page_backend {
        least_conn;
        # Em produção, substitua pelos IPs reais dos containers
        server landing-page:8000 max_fails=3 fail_timeout=30s;
        # server landing-page-2:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream recycling_backend {
        least_conn;
        server recycling-system:8000 max_fails=3 fail_timeout=30s;
        # server recycling-system-2:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream fiscal_backend {
        least_conn;
        server fiscal-system:8000 max_fails=3 fail_timeout=30s;
        # server fiscal-system-2:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream clinica_backend {
        least_conn;
        server clinica-system:3000 max_fails=3 fail_timeout=30s;
        # server clinica-system-2:3000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream admin_backend {
        least_conn;
        server main-app:8000 max_fails=3 fail_timeout=30s;
        # server main-app-2:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Load balancer para APIs (Round Robin para distribuição uniforme)
    upstream api_backend {
        least_conn;
        server recycling-system:8000 max_fails=3 fail_timeout=30s;
        server fiscal-system:8000 max_fails=3 fail_timeout=30s;
        server main-app:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTPS Server - Configuração otimizada
    server {
        listen 443 ssl http2;
        server_name aviladevops.com.br *.aviladevops.com.br;

        # SSL Configuration - Preparado para Let's Encrypt
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        # OCSP Stapling (para melhor performance SSL)
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # Security Headers - CSP melhorada para SaaS
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # CSP mais permissiva para integrações comuns de SaaS
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com https://cdnjs.cloudflare.com https://fonts.googleapis.com;
            style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://unpkg.com https://cdnjs.cloudflare.com https://fonts.googleapis.com;
            img-src 'self' data: https: blob:;
            font-src 'self' https://cdn.jsdelivr.net https://unpkg.com https://cdnjs.cloudflare.com https://fonts.gstatic.com;
            connect-src 'self' https://api.stripe.com https://api.mercadopago.com https://fcm.googleapis.com;
            frame-src 'self' https://js.stripe.com https://www.mercadopago.com;
            object-src 'none';
            base-uri 'self';
            form-action 'self';
        " always;

        # Headers adicionais para SaaS
        add_header X-Service-Name $service_name always;
        add_header X-Tenant $tenant_name always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Arquivos estáticos - Servidos diretamente pelo Nginx para melhor performance
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|pdf)$ {
            # Tentar servir do volume de estáticos primeiro
            root /app/staticfiles;

            # Se não encontrar, tentar no backend
            try_files $uri @proxy_static_fallback;

            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "nginx-static";

            # Gzip para estáticos
            gzip_static on;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status para monitoramento
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Landing Page - Serviço público
        location / {
            proxy_pass http://landing_page_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "landing-page";
            proxy_set_header X-Tenant $tenant_name;

            # Timeouts otimizados
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Rate limiting mais permissivo
            limit_req zone=general burst=50 nodelay;

            # Headers adicionais
            add_header X-Subdomain "landing" always;
        }

        # Sistema de Reciclagem - Tenant específico
        location /sistema/ {
            proxy_pass http://recycling_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "recycling-system";
            proxy_set_header X-Tenant "sistema";

            limit_req zone=general burst=30 nodelay;

            add_header X-Subdomain "sistema" always;
        }

        # Sistema Fiscal - Tenant específico
        location /fiscal/ {
            proxy_pass http://fiscal_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "fiscal-system";
            proxy_set_header X-Tenant "fiscal";

            limit_req zone=general burst=30 nodelay;

            add_header X-Subdomain "fiscal" always;
        }

        # Clínica Management - Tenant específico
        location /clinica/ {
            proxy_pass http://clinica_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "clinica-system";
            proxy_set_header X-Tenant "clinica";

            limit_req zone=general burst=30 nodelay;

            add_header X-Subdomain "clinica" always;
        }

        # Dashboard Administrativo - Acesso restrito
        location /admin/ {
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "main-app";
            proxy_set_header X-Tenant "admin";

            # Basic auth para admin (opcional - implementar via aplicação)
            # auth_basic "Admin Area";
            # auth_basic_user_file /etc/nginx/.htpasswd;

            # Rate limiting mais restritivo para admin
            limit_req zone=admin burst=10 nodelay;

            add_header X-Subdomain "admin" always;
        }

        # API endpoints - Tratamento especial
        location /api/ {
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "api";
            proxy_set_header X-Tenant $tenant_name;

            # Rate limiting específico para API
            limit_req zone=api burst=50 nodelay;

            # CORS headers melhorados para SaaS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Tenant-ID, X-Requested-With, Accept, Origin' always;
            add_header 'Access-Control-Max-Age' '86400' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Media files - Servidos pelo backend (menor volume, pode ser otimizado)
        location /media/ {
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 1M;
            add_header Cache-Control "public";
            add_header X-Served-By "django-media";
        }

        # Fallback para estáticos não encontrados
        location @proxy_static_fallback {
            proxy_pass http://landing_page_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 1h;
            add_header Cache-Control "public";
        }

        # WebSocket support (para futuras funcionalidades)
        location /ws/ {
            proxy_pass http://admin_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 86400;
        }

        # Redirect para HTTPS (exceto health checks)
        location @redirect_https {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTP Server - Apenas redireciona para HTTPS
    server {
        listen 80;
        server_name aviladevops.com.br *.aviladevops.com.br;

        # Não logar health checks
        location /health {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
            access_log off;
        }

        # Redirecionar tudo para HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Health check server (porta interna)
    server {
        listen 8080;
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Monitoring server
    server {
        listen 9091;
        location /metrics {
            stub_status on;
            access_log off;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        location /nginx-metrics {
            access_log off;
            return 200 "active_connections: $connections_active\naccepted_connections: $connections_accepted\nhandled_connections: $connections_handled\nrequests: $request_counter\nreading: $connections_reading\nwriting: $connections_writing\nwaiting: $connections_waiting\n";
            add_header Content-Type text/plain;
        }
    }
}
