name: Build & Deploy Cloud Run (multi-service)

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: nicolasrosaab
  REGION: southamerica-east1  # ajuste se necessÃ¡rio
  REPO: cloud-run             # Artifact Registry repository name

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: app
            domain: app.aviladevops.com.br
          - service: clinica
            domain: clinica.aviladevops.com.br
          - service: fiscal
            domain: fiscal.aviladevops.com.br
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (SA key)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_API_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build image
        working-directory: web_app
        run: |
          IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ matrix.service }}:${{ github.sha }}
          docker build -t "$IMAGE" .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Push image
        run: docker push "$IMAGE"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ matrix.service }} \
            --image "$IMAGE" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} \
            --set-env-vars DJANGO_DEBUG=False \
            --set-env-vars ALLOWED_HOSTS="${{ matrix.domain }},localhost,127.0.0.1" \
            --set-env-vars CSRF_TRUSTED_ORIGINS="https://${{ matrix.domain }}" \
            --set-env-vars DB_NAME=${{ secrets.DB_NAME }} \
            --set-env-vars DB_USER=${{ secrets.DB_USER }} \
            --set-env-vars DB_PASS=${{ secrets.DB_PASS }} \
            --set-env-vars INSTANCE_CONNECTION_NAME=${{ secrets.INSTANCE_CONNECTION_NAME }} \
            --set-env-vars ORCID_ID=0009-0005-8573-4111 \
            --add-cloudsql-instances ${{ secrets.INSTANCE_CONNECTION_NAME }}

      - name: Map domain to service (idempotent)
        run: |
          gcloud run domain-mappings describe ${{ matrix.domain }} \
            --region ${{ env.REGION }} --platform managed \
            || gcloud run domain-mappings create \
                 --service ${{ matrix.service }} \
                 --domain ${{ matrix.domain }} \
                 --region ${{ env.REGION }} --platform managed
