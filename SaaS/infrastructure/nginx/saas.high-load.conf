# √Åvila DevOps SaaS - High-Load Nginx Configuration
# Optimized for 1000+ concurrent requests per second
# Target: Support 1000-1500 req/s with <300ms response time

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

# Error log
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events configuration - optimized for high concurrency
events {
    worker_connections 8192;  # Increased from 2048 to support more concurrent connections
    use epoll;                # Linux optimization for high-performance I/O
    multi_accept on;          # Accept multiple connections at once
    accept_mutex off;         # Better performance under high load
}

# HTTP configuration
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format with performance metrics
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Reduce logging for performance (consider using buffer)
    access_log /var/log/nginx/access.log main buffer=32k flush=10s;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;        # Increased from 100 to reduce connection overhead
    reset_timedout_connection on;
    client_body_timeout 15;
    client_header_timeout 15;
    send_timeout 15;

    # Buffer optimizations for high throughput
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    client_max_body_size 50m;
    large_client_header_buffers 4 32k;
    output_buffers 4 64k;
    postpone_output 1460;
    
    # Proxy buffer optimizations
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 32 8k;
    proxy_busy_buffers_size 16k;
    proxy_temp_file_write_size 16k;

    # Gzip compression optimized
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 5;              # Reduced from 6 for better CPU/compression trade-off
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    gzip_disable "msie6";

    # Rate limiting optimized for 1000 req/s
    limit_req_zone $binary_remote_addr zone=api:20m rate=500r/s;
    limit_req_zone $binary_remote_addr zone=general:20m rate=500r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=admin:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=1000r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:20m;
    limit_conn addr 100;

    # Open file cache for better performance
    open_file_cache max=10000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Map for service identification
    map $http_host $service_name {
        default "unknown";
        "~^(.+)\.aviladevops\.com\.br$" $1;
        "aviladevops.com.br" "landing-page";
    }

    # Map for tenant identification
    map $http_host $tenant_name {
        default "default";
        "~^(.+)\.aviladevops\.com\.br$" $1;
    }

    # Upstream configuration with connection pooling and load balancing
    upstream landing_page_backend {
        least_conn;
        # Production servers - scale to 5-10 instances
        server landing-page-1:8000 max_fails=3 fail_timeout=30s weight=1;
        server landing-page-2:8000 max_fails=3 fail_timeout=30s weight=1;
        server landing-page-3:8000 max_fails=3 fail_timeout=30s weight=1;
        server landing-page-4:8000 max_fails=3 fail_timeout=30s weight=1;
        server landing-page-5:8000 max_fails=3 fail_timeout=30s weight=1;
        
        # Connection pooling
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream recycling_backend {
        least_conn;
        server recycling-system-1:8000 max_fails=3 fail_timeout=30s weight=1;
        server recycling-system-2:8000 max_fails=3 fail_timeout=30s weight=1;
        server recycling-system-3:8000 max_fails=3 fail_timeout=30s weight=1;
        server recycling-system-4:8000 max_fails=3 fail_timeout=30s weight=1;
        server recycling-system-5:8000 max_fails=3 fail_timeout=30s weight=1;
        
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream fiscal_backend {
        least_conn;
        server fiscal-system-1:8000 max_fails=3 fail_timeout=30s weight=1;
        server fiscal-system-2:8000 max_fails=3 fail_timeout=30s weight=1;
        server fiscal-system-3:8000 max_fails=3 fail_timeout=30s weight=1;
        server fiscal-system-4:8000 max_fails=3 fail_timeout=30s weight=1;
        server fiscal-system-5:8000 max_fails=3 fail_timeout=30s weight=1;
        
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream clinica_backend {
        least_conn;
        server clinica-system-1:3000 max_fails=3 fail_timeout=30s weight=1;
        server clinica-system-2:3000 max_fails=3 fail_timeout=30s weight=1;
        server clinica-system-3:3000 max_fails=3 fail_timeout=30s weight=1;
        server clinica-system-4:3000 max_fails=3 fail_timeout=30s weight=1;
        server clinica-system-5:3000 max_fails=3 fail_timeout=30s weight=1;
        
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream admin_backend {
        least_conn;
        server main-app-1:8000 max_fails=3 fail_timeout=30s weight=1;
        server main-app-2:8000 max_fails=3 fail_timeout=30s weight=1;
        server main-app-3:8000 max_fails=3 fail_timeout=30s weight=1;
        server main-app-4:8000 max_fails=3 fail_timeout=30s weight=1;
        server main-app-5:8000 max_fails=3 fail_timeout=30s weight=1;
        
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    # Shared cache configuration
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:100m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:100m max_size=2g inactive=24h use_temp_path=off;

    # HTTPS Server - Production optimized
    server {
        listen 443 ssl http2 reuseport;
        listen [::]:443 ssl http2 reuseport;
        server_name aviladevops.com.br *.aviladevops.com.br;

        # SSL Configuration - TLS 1.3 preferred
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256;
        ssl_prefer_server_ciphers off;
        
        # SSL session cache for better performance
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 1.1.1.1 valid=300s;
        resolver_timeout 5s;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Service-Name $service_name always;
        add_header X-Tenant $tenant_name always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Static files with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|pdf)$ {
            root /app/staticfiles;
            try_files $uri @proxy_static_fallback;
            
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "HIT-STATIC";
            
            gzip_static on;
            limit_req zone=static burst=100 nodelay;
        }

        # Health check - no logging
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status for monitoring
        location = /nginx-status {
            stub_status on;
            access_log off;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Landing Page
        location / {
            proxy_pass http://landing_page_backend;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "landing-page";
            proxy_set_header X-Tenant $tenant_name;
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Rate limiting
            limit_req zone=general burst=100 nodelay;
            
            # Response headers
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-Response-Time $request_time;
        }

        # API endpoints with caching
        location /api/ {
            proxy_pass http://admin_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "api";
            proxy_set_header X-Tenant $tenant_name;
            proxy_set_header Connection "";
            
            # Smart caching for GET requests
            proxy_cache api_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            proxy_cache_methods GET HEAD;
            
            # Bypass cache for non-GET requests
            proxy_cache_bypass $request_method != GET;
            proxy_no_cache $request_method != GET;
            
            # Rate limiting
            limit_req zone=api burst=200 nodelay;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Tenant-ID, X-Requested-With, Accept, Origin' always;
            add_header 'Access-Control-Max-Age' '86400' always;
            add_header X-Cache-Status $upstream_cache_status;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Sistema de Reciclagem
        location /sistema/ {
            proxy_pass http://recycling_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "recycling-system";
            proxy_set_header X-Tenant "sistema";
            proxy_set_header Connection "";
            
            limit_req zone=general burst=100 nodelay;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Sistema Fiscal
        location /fiscal/ {
            proxy_pass http://fiscal_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "fiscal-system";
            proxy_set_header X-Tenant "fiscal";
            proxy_set_header Connection "";
            
            limit_req zone=general burst=100 nodelay;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Cl√≠nica Management
        location /clinica/ {
            proxy_pass http://clinica_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "clinica-system";
            proxy_set_header X-Tenant "clinica";
            proxy_set_header Connection "";
            
            limit_req zone=general burst=100 nodelay;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Admin Dashboard
        location /admin/ {
            proxy_pass http://admin_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "main-app";
            proxy_set_header X-Tenant "admin";
            proxy_set_header Connection "";
            
            limit_req zone=admin burst=50 nodelay;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Media files
        location /media/ {
            proxy_pass http://admin_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            expires 1M;
            add_header Cache-Control "public";
        }

        # WebSocket support
        location /ws/ {
            proxy_pass http://admin_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Fallback for static files
        location @proxy_static_fallback {
            proxy_pass http://landing_page_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            expires 1h;
            add_header Cache-Control "public";
            add_header X-Cache-Status "MISS-FALLBACK";
        }
    }

    # HTTP Server - Redirect to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name aviladevops.com.br *.aviladevops.com.br;

        location = /health {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
            access_log off;
        }

        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Monitoring server
    server {
        listen 9091;
        listen [::]:9091;
        
        location /metrics {
            stub_status on;
            access_log off;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
}
