# Ávila DevOps SaaS - Clínica Management Dockerfile
# Dockerfile otimizado para aplicação Next.js

# Stage 1: Dependencies
FROM node:18-alpine AS deps

# Instalar dependências necessárias
RUN apk add --no-cache \
    libc6-compat \
    libjpeg-turbo-dev \
    libpng-dev \
    dumb-init

# Definir diretório de trabalho
WORKDIR /app

# Copiar arquivos de dependências
COPY package*.json ./

# Instalar dependências
RUN npm ci --only=production

# Stage 2: Builder
FROM node:18-alpine AS builder

# Instalar dependências necessárias para build
RUN apk add --no-cache \
    libc6-compat \
    libjpeg-turbo-dev \
    libpng-dev \
    python3 \
    make \
    g++

# Definir diretório de trabalho
WORKDIR /app

# Copiar dependências do stage anterior
COPY --from=deps /app/node_modules ./node_modules

# Copiar código fonte
COPY . .

# Definir variáveis de ambiente para build
ENV NEXT_TELEMETRY_DISABLED 1

# Build da aplicação
RUN npm run build

# Stage 3: Runner
FROM node:18-alpine AS runner

# Instalar dependências necessárias para runtime
RUN apk add --no-cache \
    libc6-compat \
    libjpeg-turbo-dev \
    libpng-dev \
    dumb-init

# Criar usuário não-root
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Definir diretório de trabalho
WORKDIR /app

# Copiar usuário do builder
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Mudar para usuário não-root
USER nextjs

# Expor porta
EXPOSE 3000

# Definir variáveis de ambiente
ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1
ENV PORT 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1

# Usar dumb-init para gerenciar sinais
ENTRYPOINT ["dumb-init", "--"]

# Comando para iniciar
CMD ["node", "server.js"]
