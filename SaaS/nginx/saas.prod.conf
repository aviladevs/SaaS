# Ávila DevOps SaaS - Nginx Production Configuration
# Configuração otimizada para produção com múltiplos serviços

# Define usuário e processos de trabalho
user nginx;
worker_processes auto;
worker_rlimit_nofile 1024;

# Eventos de trabalho
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Configurações HTTP
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging otimizado
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$http_x_forwarded_proto" "$upstream_addr" '
                    '$request_time $upstream_response_time';

    log_format health_check '$remote_addr - [$time_local] "$request" $status';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Configurações básicas de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;

    # Buffers e timeouts
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    client_max_body_size 50m;
    large_client_header_buffers 4 8k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Map para identificar serviços
    map $http_host $service_name {
        default "unknown";
        "~^(.+)\.aviladevops\.com\.br$" $1;
        "aviladevops.com.br" "landing-page";
    }

    # Upstream servers - Load balancing
    upstream landing_page_backend {
        least_conn;
        server landing-page:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream recycling_backend {
        least_conn;
        server recycling-system:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream fiscal_backend {
        least_conn;
        server fiscal-system:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream clinica_backend {
        least_conn;
        server clinica-system:3000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream admin_backend {
        least_conn;
        server main-app:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # HTTPS Server
    server {
        listen 443 ssl http2;
        server_name aviladevops.com.br *.aviladevops.com.br;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        # Security Headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'" always;

        # Static files caching - Long term
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Service $service_name;

            # Try local files first, then proxy
            try_files $uri @proxy_to_service;
        }

        # Health check endpoint
        location /health {
            access_log /var/log/nginx/health_check.log health_check;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Landing Page (página inicial)
        location / {
            proxy_pass http://landing_page_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "landing-page";

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Rate limiting para página inicial
            limit_req zone=general burst=20 nodelay;
        }

        # Sistema de Reciclagem
        location /sistema/ {
            proxy_pass http://recycling_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "recycling-system";

            limit_req zone=general burst=20 nodelay;

            # Headers para subdomínio
            add_header X-Subdomain "sistema" always;
        }

        # Sistema Fiscal
        location /fiscal/ {
            proxy_pass http://fiscal_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "fiscal-system";

            limit_req zone=general burst=20 nodelay;

            add_header X-Subdomain "fiscal" always;
        }

        # Clínica Management
        location /clinica/ {
            proxy_pass http://clinica_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "clinica-system";

            limit_req zone=general burst=20 nodelay;

            add_header X-Subdomain "clinica" always;
        }

        # Dashboard Administrativo
        location /admin/ {
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "main-app";

            # Basic auth para admin (opcional)
            # auth_basic "Admin Area";
            # auth_basic_user_file /etc/nginx/.htpasswd;

            limit_req zone=general burst=10 nodelay;

            add_header X-Subdomain "admin" always;
        }

        # API endpoints
        location /api/ {
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Service "api";

            limit_req zone=api burst=20 nodelay;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Tenant-ID' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Media files
        location /media/ {
            proxy_pass http://admin_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 1M;
            add_header Cache-Control "public";
        }

        # Static files
        location /static/ {
            proxy_pass http://landing_page_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Proxy fallback para serviços não identificados
        location @proxy_to_service {
            proxy_pass http://landing_page_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP redirect to HTTPS
    server {
        listen 80;
        server_name aviladevops.com.br *.aviladevops.com.br;
        return 301 https://$server_name$request_uri;
    }

    # Health check server (porta interna)
    server {
        listen 8080;
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Monitoring server
    server {
        listen 9091;
        location /metrics {
            stub_status on;
            access_log off;
        }

        location /nginx-metrics {
            access_log off;
            return 200 "active_connections: $connections_active\naccepted_connections: $connections_accepted\nhandled_connections: $connections_handled\nrequests: $request_counter\nreading: $connections_reading\nwriting: $connections_writing\nwaiting: $connections_waiting\n";
            add_header Content-Type text/plain;
        }
    }
}
