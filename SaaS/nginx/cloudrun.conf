# Ávila DevOps SaaS - Cloud Run Optimized Configuration
# Configuração Nginx otimizada para uso como sidecar no Cloud Run

# Define usuário e processos de trabalho
user nginx;
worker_processes 1;
worker_rlimit_nofile 1024;

# Eventos de trabalho
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Configurações HTTP
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging otimizado para Cloud Run
    log_format cloudrun '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log cloudrun;
    error_log /var/log/nginx/error.log warn;

    # Configurações básicas
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;

    # Buffers otimizados para Cloud Run
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    client_max_body_size 32m;
    large_client_header_buffers 2 2k;
    output_buffers 1 16k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting otimizado para Cloud Run
    limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=30r/m;

    # Upstream servers - Single container por serviço no Cloud Run
    upstream django_backend {
        server 127.0.0.1:8000;
        keepalive 32;
    }

    # Server HTTP (Cloud Run não gerencia SSL)
    server {
        listen 8080;
        server_name _;

        # Security Headers - CSP otimizada para SaaS
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;

        # CSP mais permissiva para integrações SaaS
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com https://cdnjs.cloudflare.com https://fonts.googleapis.com https://js.stripe.com;
            style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://unpkg.com https://cdnjs.cloudflare.com https://fonts.googleapis.com;
            img-src 'self' data: https: blob:;
            font-src 'self' https://cdn.jsdelivr.net https://unpkg.com https://cdnjs.cloudflare.com https://fonts.gstatic.com;
            connect-src 'self' https://api.stripe.com https://api.mercadopago.com https://fcm.googleapis.com;
            frame-src 'self' https://js.stripe.com https://www.mercadopago.com;
            object-src 'none';
            base-uri 'self';
            form-action 'self';
        " always;

        # Headers para Cloud Run
        add_header X-Cloud-Run-Service "aviladevops-saas" always;
        add_header X-Service-Name "saas-gateway" always;

        # Arquivos estáticos - Servidos pelo próprio serviço Django
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "django-static";
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API endpoints
        location /api/ {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            limit_req zone=api burst=20 nodelay;

            # CORS para SaaS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Tenant-ID' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Media files
        location /media/ {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 1M;
            add_header Cache-Control "public";
        }

        # WebSocket support
        location /ws/ {
            proxy_pass http://django_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 86400;
        }

        # Django application - Tudo que não for estático vai para Django
        location / {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts para Cloud Run
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Rate limiting geral
            limit_req zone=general burst=50 nodelay;
        }
    }
}
