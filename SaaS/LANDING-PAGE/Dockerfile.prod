# Ávila DevOps SaaS - Landing Page Dockerfile
# Dockerfile otimizado para o serviço de Landing Page

FROM python:3.11-slim

# Instalar dependências de sistema
RUN apt-get update && apt-get install -y \
    libpq5 \
    libffi7 \
    libssl3 \
    libjpeg62-turbo \
    libpng16-16 \
    zlib1g \
    libfreetype6 \
    liblcms2-2 \
    libopenjp2-7 \
    libtiff5 \
    libwebp6 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Definir variáveis de ambiente
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    DJANGO_SETTINGS_MODULE=core.settings \
    ENVIRONMENT=production \
    SERVICE_NAME=landing-page

# Criar usuário não-root
RUN groupadd -g 1000 django && useradd -u 1000 -g django django

# Definir diretório de trabalho
WORKDIR /app

# Instalar dependências Python
COPY requirements.txt ./
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Criar diretórios necessários
RUN mkdir -p /app/staticfiles /app/media /app/logs /app/templates && \
    chown -R django:django /app

# Copiar código da aplicação
COPY --chown=django:django . .

# Mudar para usuário não-root
USER django

# Coletar arquivos estáticos
RUN python manage.py collectstatic --noinput

# Expor porta
EXPOSE 8000

# Health check específico para landing page
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/ || exit 1

# Comando otimizado para produção
CMD ["gunicorn", \
     "--bind", "0.0.0.0:8000", \
     "--chdir", "/app", \
     "--workers", "3", \
     "--threads", "2", \
     "--worker-class", "gthread", \
     "--worker-connections", "1000", \
     "--max-requests", "1000", \
     "--max-requests-jitter", "50", \
     "--keep-alive", "5", \
     "--log-level", "info", \
     "--access-logformat", "%(h)s %(l)s %(u)s %(t)s \"%(r)s\" %(s)s %(b)s \"%(f)s\" \"%(a)s\" %(D)s", \
     "core.wsgi:application"]
