version: '3.8'

# Comprehensive Monitoring & Observability Stack for √Åvila DevOps SaaS
# Complete monitoring solution with Prometheus, Grafana, ELK, and Jaeger

services:
  # ============================================================================
  # METRICS COLLECTION - PROMETHEUS
  # ============================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: saas-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
      - ./monitoring/prometheus/rules.yml:/etc/prometheus/rules.yml:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring
      - saas-network
    restart: unless-stopped
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=9090"

  # ============================================================================
  # ALERTING - ALERTMANAGER
  # ============================================================================
  alertmanager:
    image: prom/alertmanager:latest
    container_name: saas-alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    networks:
      - monitoring
    restart: unless-stopped
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - PAGERDUTY_URL=${PAGERDUTY_URL:-}
      - PAGERDUTY_INTEGRATION_KEY=${PAGERDUTY_INTEGRATION_KEY:-}
      - WEBHOOK_URL=${WEBHOOK_URL:-}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}

  # ============================================================================
  # VISUALIZATION - GRAFANA
  # ============================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: saas-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - monitoring
      - saas-network
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
      - GF_SERVER_ROOT_URL=http://localhost:3001
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_USERS_ALLOW_SIGN_UP=false
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    depends_on:
      - prometheus

  # ============================================================================
  # EXPORTERS - INFRASTRUCTURE METRICS
  # ============================================================================
  node-exporter:
    image: prom/node-exporter:latest
    container_name: saas-node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
    restart: unless-stopped

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: saas-postgres-exporter
    ports:
      - "9187:9187"
    networks:
      - monitoring
      - saas-network
    restart: unless-stopped
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/aviladevops_saas?sslmode=disable

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: saas-redis-exporter
    command:
      - '--redis.addr=redis:6379'
      - '--redis.password=${REDIS_PASSWORD:-}'
    ports:
      - "9121:9121"
    networks:
      - monitoring
      - saas-network
    restart: unless-stopped

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: saas-nginx-exporter
    command:
      - '-nginx.scrape-uri=http://nginx:80/stub_status'
    ports:
      - "9113:9113"
    networks:
      - monitoring
      - saas-network
    restart: unless-stopped

  # ============================================================================
  # LOGGING - ELK STACK
  # ============================================================================
  elasticsearch:
    image: elasticsearch:8.8.2
    container_name: saas-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./monitoring/elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - monitoring
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  logstash:
    image: logstash:8.8.2
    container_name: saas-logstash
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044:5044"
      - "5514:5514"
      - "9600:9600"
    volumes:
      - ./monitoring/elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    networks:
      - monitoring
      - saas-network
    restart: unless-stopped
    environment:
      - "LS_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:8.8.2
    container_name: saas-kibana
    ports:
      - "5601:5601"
    volumes:
      - ./monitoring/elk/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - kibana_data:/usr/share/kibana/data
    networks:
      - monitoring
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  # ============================================================================
  # DISTRIBUTED TRACING - JAEGER
  # ============================================================================
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: saas-jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "4317:4317"
      - "4318:4318"
      - "9411:9411"
    networks:
      - monitoring
      - saas-network
    restart: unless-stopped
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - ES_INDEX_PREFIX=jaeger
      - ES_TAGS_AS_FIELDS_ALL=true
    depends_on:
      - elasticsearch

  # ============================================================================
  # ADDITIONAL TOOLS
  # ============================================================================
  
  # Celery Flower for task monitoring
  celery-flower:
    image: mher/flower:latest
    container_name: saas-celery-flower
    command: celery --broker=${CELERY_BROKER_URL:-redis://redis:6379/0} flower --port=5555
    ports:
      - "5555:5555"
    networks:
      - monitoring
      - saas-network
    restart: unless-stopped
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - FLOWER_BASIC_AUTH=${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin}

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: saas-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg

volumes:
  prometheus_data:
    driver: local
  alertmanager_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local
  kibana_data:
    driver: local

networks:
  monitoring:
    driver: bridge
  saas-network:
    external: true
